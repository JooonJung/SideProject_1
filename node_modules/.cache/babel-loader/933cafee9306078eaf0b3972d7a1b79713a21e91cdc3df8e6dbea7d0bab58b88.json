{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/hardwork/my-react-app/src/components/ImageCard.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import nextArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/next.png\";\n// import prevArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/back.png\";\n\n// export default function ImageCard({ imageItem, height, width }) {\n//   return (\n//     <div>\n//       <Carousel\n//         showThumbs={false}\n//         showStatus={false}\n//         showIndicators={false}\n//         infiniteLoop={true}\n//         autoPlay={false}\n//         renderArrowPrev={(onClickHandler, hasPrev, label) =>\n//           hasPrev && (\n//             <button\n//               type=\"button\"\n//               onClick={onClickHandler}\n//               title={label}\n//               style={{\n//                 position: \"absolute\",\n//                 top: \"50%\",\n//                 transform: \"translateY(-50%)\",\n//                 backgroundColor: \"transparent\",\n//                 color: \"black\",\n//                 border: \"none\",\n//                 cursor: \"pointer\",\n//                 height: \"100%\",\n//                 zIndex: \"10\",\n//                 filter: \"invert(1)\",\n//               }}\n//             >\n//               <img\n//                 src={prevArrow}\n//                 alt=\"Previous\"\n//                 style={{ width: \"15px\", height: \"15px\" }}\n//               />\n//             </button>\n//           )\n//         }\n//         renderArrowNext={(onClickHandler, hasNext, label) =>\n//           hasNext && (\n//             <button\n//               type=\"button\"\n//               onClick={onClickHandler}\n//               title={label}\n//               style={{\n//                 position: \"absolute\",\n//                 right: \"0px\",\n//                 top: \"50%\",\n//                 transform: \"translateY(-50%)\",\n//                 color: \"white\",\n//                 border: \"none\",\n//                 cursor: \"pointer\",\n//                 backgroundColor: \"transparent\",\n//                 height: \"100%\",\n//                 filter: \"invert(1)\",\n//               }}\n//             >\n//               <img\n//                 src={nextArrow}\n//                 alt=\"Next\"\n//                 style={{ width: \"15px\", height: \"15px\" }}\n//               />\n//             </button>\n//           )\n//         }\n//       >\n//         {imageItem.images.map((item, index) => (\n//           <div>\n//             <img\n//               src={item.image}\n//               alt=\"sample1\"\n//               style={{ height: height, width: width }}\n//             />\n//           </div>\n//         ))}\n//       </Carousel>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport nextArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/next.png\";\nimport prevArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/back.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageCard({\n  imageItem,\n  height,\n  width\n}) {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    } else {\n      setCurrentIndex(imageItem.images.length - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentIndex < imageItem.images.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setCurrentIndex(0);\n    }\n  };\n  const sliderStyle = {\n    transform: `translateX(-${currentIndex * 100}%)`,\n    transition: \"transform 0.5s ease-in-out\",\n    display: \"flex\",\n    width: `${imageItem.images.length * 100}%`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      overflow: \"hidden\",\n      width: width,\n      height: height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handlePrev,\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"0\",\n        transform: \"translateY(-50%)\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        cursor: \"pointer\",\n        zIndex: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: prevArrow,\n        alt: \"Previous\",\n        style: {\n          width: \"15px\",\n          height: \"15px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleNext,\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        right: \"0\",\n        transform: \"translateY(-50%)\",\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        cursor: \"pointer\",\n        zIndex: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nextArrow,\n        alt: \"Next\",\n        style: {\n          width: \"15px\",\n          height: \"15px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: sliderStyle,\n      children: imageItem.images.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: \"0 0 auto\",\n          width: width,\n          height: height\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: \"sample\",\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageCard, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = ImageCard;\nvar _c;\n$RefreshReg$(_c, \"ImageCard\");","map":{"version":3,"names":["React","useState","nextArrow","prevArrow","jsxDEV","_jsxDEV","ImageCard","imageItem","height","width","_s","currentIndex","setCurrentIndex","handlePrev","images","length","handleNext","sliderStyle","transform","transition","display","style","position","overflow","children","type","onClick","top","left","backgroundColor","border","cursor","zIndex","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","right","map","item","index","flex","image","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/hardwork/my-react-app/src/components/ImageCard.jsx"],"sourcesContent":["// import React from \"react\";\n// import { Carousel } from \"react-responsive-carousel\";\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import nextArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/next.png\";\n// import prevArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/back.png\";\n\n// export default function ImageCard({ imageItem, height, width }) {\n//   return (\n//     <div>\n//       <Carousel\n//         showThumbs={false}\n//         showStatus={false}\n//         showIndicators={false}\n//         infiniteLoop={true}\n//         autoPlay={false}\n//         renderArrowPrev={(onClickHandler, hasPrev, label) =>\n//           hasPrev && (\n//             <button\n//               type=\"button\"\n//               onClick={onClickHandler}\n//               title={label}\n//               style={{\n//                 position: \"absolute\",\n//                 top: \"50%\",\n//                 transform: \"translateY(-50%)\",\n//                 backgroundColor: \"transparent\",\n//                 color: \"black\",\n//                 border: \"none\",\n//                 cursor: \"pointer\",\n//                 height: \"100%\",\n//                 zIndex: \"10\",\n//                 filter: \"invert(1)\",\n//               }}\n//             >\n//               <img\n//                 src={prevArrow}\n//                 alt=\"Previous\"\n//                 style={{ width: \"15px\", height: \"15px\" }}\n//               />\n//             </button>\n//           )\n//         }\n//         renderArrowNext={(onClickHandler, hasNext, label) =>\n//           hasNext && (\n//             <button\n//               type=\"button\"\n//               onClick={onClickHandler}\n//               title={label}\n//               style={{\n//                 position: \"absolute\",\n//                 right: \"0px\",\n//                 top: \"50%\",\n//                 transform: \"translateY(-50%)\",\n//                 color: \"white\",\n//                 border: \"none\",\n//                 cursor: \"pointer\",\n//                 backgroundColor: \"transparent\",\n//                 height: \"100%\",\n//                 filter: \"invert(1)\",\n//               }}\n//             >\n//               <img\n//                 src={nextArrow}\n//                 alt=\"Next\"\n//                 style={{ width: \"15px\", height: \"15px\" }}\n//               />\n//             </button>\n//           )\n//         }\n//       >\n//         {imageItem.images.map((item, index) => (\n//           <div>\n//             <img\n//               src={item.image}\n//               alt=\"sample1\"\n//               style={{ height: height, width: width }}\n//             />\n//           </div>\n//         ))}\n//       </Carousel>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport nextArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/next.png\";\nimport prevArrow from \"/Users/user/Desktop/hardwork/my-react-app/src/image/back.png\";\n\nexport default function ImageCard({ imageItem, height, width }) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    } else {\n      setCurrentIndex(imageItem.images.length - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentIndex < imageItem.images.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setCurrentIndex(0);\n    }\n  };\n\n  const sliderStyle = {\n    transform: `translateX(-${currentIndex * 100}%)`,\n    transition: \"transform 0.5s ease-in-out\",\n    display: \"flex\",\n    width: `${imageItem.images.length * 100}%`,\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        overflow: \"hidden\",\n        width: width,\n        height: height,\n      }}\n    >\n      <button\n        type=\"button\"\n        onClick={handlePrev}\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"0\",\n          transform: \"translateY(-50%)\",\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          cursor: \"pointer\",\n          zIndex: 10,\n        }}\n      >\n        <img\n          src={prevArrow}\n          alt=\"Previous\"\n          style={{ width: \"15px\", height: \"15px\" }}\n        />\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleNext}\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          right: \"0\",\n          transform: \"translateY(-50%)\",\n          backgroundColor: \"transparent\",\n          border: \"none\",\n          cursor: \"pointer\",\n          zIndex: 10,\n        }}\n      >\n        <img\n          src={nextArrow}\n          alt=\"Next\"\n          style={{ width: \"15px\", height: \"15px\" }}\n        />\n      </button>\n      <div style={sliderStyle}>\n        {imageItem.images.map((item, index) => (\n          <div\n            key={index}\n            style={{\n              flex: \"0 0 auto\",\n              width: width,\n              height: height,\n            }}\n          >\n            <img\n              src={item.image}\n              alt=\"sample\"\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}