{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/hardwork/my-react-app/src/components/RoomListCard/RoomListCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomListCard = ({\n  data\n}) => {\n  _s();\n  const [current, setCurrent] = useState(0);\n  const length = data.length;\n  const nextSlide = () => {\n    if (current < length - 4) {\n      setCurrent(current + 1);\n    }\n  };\n  const prevSlide = () => {\n    if (current > 0) {\n      setCurrent(current - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"left-arrow\",\n      onClick: prevSlide,\n      disabled: current === 0,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slides\",\n      children: data.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index >= current && index < current + 4 ? \"slide active\" : \"slide\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.image,\n          alt: \"slide image\",\n          className: \"slide-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: slide.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right-arrow\",\n      onClick: nextSlide,\n      disabled: current === length - 4,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomListCard, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n_c = RoomListCard;\nexport default RoomListCard;\nvar _c;\n$RefreshReg$(_c, \"RoomListCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoomListCard","data","_s","current","setCurrent","length","nextSlide","prevSlide","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","slide","index","src","image","alt","title","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/hardwork/my-react-app/src/components/RoomListCard/RoomListCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst RoomListCard = ({ data }) => {\n  const [current, setCurrent] = useState(0);\n  const length = data.length;\n\n  const nextSlide = () => {\n    if (current < length - 4) {\n      setCurrent(current + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (current > 0) {\n      setCurrent(current - 1);\n    }\n  };\n\n  return (\n    <div className=\"slider\">\n      <button\n        className=\"left-arrow\"\n        onClick={prevSlide}\n        disabled={current === 0}\n      >\n        &lt;\n      </button>\n      <div className=\"slides\">\n        {data.map((slide, index) => (\n          <div\n            className={\n              index >= current && index < current + 4 ? \"slide active\" : \"slide\"\n            }\n            key={index}\n          >\n            <img src={slide.image} alt=\"slide image\" className=\"slide-image\" />\n            <p>{slide.title}</p>\n          </div>\n        ))}\n      </div>\n      <button\n        className=\"right-arrow\"\n        onClick={nextSlide}\n        disabled={current === length - 4}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n\nexport default RoomListCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMQ,MAAM,GAAGJ,IAAI,CAACI,MAAM;EAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIH,OAAO,GAAGE,MAAM,GAAG,CAAC,EAAE;MACxBD,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIJ,OAAO,GAAG,CAAC,EAAE;MACfC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKS,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBV,OAAA;MACES,SAAS,EAAC,YAAY;MACtBE,OAAO,EAAEH,SAAU;MACnBI,QAAQ,EAAER,OAAO,KAAK,CAAE;MAAAM,QAAA,EACzB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBR,IAAI,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBnB,OAAA;QACES,SAAS,EACPU,KAAK,IAAIf,OAAO,IAAIe,KAAK,GAAGf,OAAO,GAAG,CAAC,GAAG,cAAc,GAAG,OAC5D;QAAAM,QAAA,gBAGDV,OAAA;UAAKoB,GAAG,EAAEF,KAAK,CAACG,KAAM;UAACC,GAAG,EAAC,aAAa;UAACb,SAAS,EAAC;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnEhB,OAAA;UAAAU,QAAA,EAAIQ,KAAK,CAACK;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHfG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhB,OAAA;MACES,SAAS,EAAC,aAAa;MACvBE,OAAO,EAAEJ,SAAU;MACnBK,QAAQ,EAAER,OAAO,KAAKE,MAAM,GAAG,CAAE;MAAAI,QAAA,EAClC;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACb,EAAA,CA/CIF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}